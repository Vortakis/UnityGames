// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace unitygames.leveldesign {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.Serialization;
    using UnityEngine;
    using UniRx;
    
    
    public partial class BobPlayerViewModelBase : uFrame.MVVM.ViewModel {
        
        private P<String> _HealthProperty;
        
        private P<String> _MoveSpeedProperty;
        
        private P<String> _RotateSpeedProperty;
        
        private P<String> _JumpSpeedProperty;
        
        public BobPlayerViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
        
        public virtual P<String> HealthProperty {
            get {
                return _HealthProperty;
            }
            set {
                _HealthProperty = value;
            }
        }
        
        public virtual P<String> MoveSpeedProperty {
            get {
                return _MoveSpeedProperty;
            }
            set {
                _MoveSpeedProperty = value;
            }
        }
        
        public virtual P<String> RotateSpeedProperty {
            get {
                return _RotateSpeedProperty;
            }
            set {
                _RotateSpeedProperty = value;
            }
        }
        
        public virtual P<String> JumpSpeedProperty {
            get {
                return _JumpSpeedProperty;
            }
            set {
                _JumpSpeedProperty = value;
            }
        }
        
        public virtual String Health {
            get {
                return HealthProperty.Value;
            }
            set {
                HealthProperty.Value = value;
            }
        }
        
        public virtual String MoveSpeed {
            get {
                return MoveSpeedProperty.Value;
            }
            set {
                MoveSpeedProperty.Value = value;
            }
        }
        
        public virtual String RotateSpeed {
            get {
                return RotateSpeedProperty.Value;
            }
            set {
                RotateSpeedProperty.Value = value;
            }
        }
        
        public virtual String JumpSpeed {
            get {
                return JumpSpeedProperty.Value;
            }
            set {
                JumpSpeedProperty.Value = value;
            }
        }
        
        public override void Bind() {
            base.Bind();
            _HealthProperty = new P<String>(this, "Health");
            _MoveSpeedProperty = new P<String>(this, "MoveSpeed");
            _RotateSpeedProperty = new P<String>(this, "RotateSpeed");
            _JumpSpeedProperty = new P<String>(this, "JumpSpeed");
        }
        
        public override void Read(ISerializerStream stream) {
            base.Read(stream);
        }
        
        public override void Write(ISerializerStream stream) {
            base.Write(stream);
        }
        
        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModelCommandInfo> list) {
            base.FillCommands(list);
        }
        
        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModelPropertyInfo> list) {
            base.FillProperties(list);
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_HealthProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_MoveSpeedProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_RotateSpeedProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_JumpSpeedProperty, false, false, false, false));
        }
    }
    
    public partial class BobPlayerViewModel {
        
        public BobPlayerViewModel(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
    }
}
